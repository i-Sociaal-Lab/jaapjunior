<!DOCTYPE html>
<html lang="nl">
<head>
  <meta charset="UTF-8">
  <title>Chatbot WPB Jeugd</title>
  <style>
    body { font-family: Arial, sans-serif; background: #f6f6f9; margin: 0; padding: 0; }
    #chat { max-width: 500px; margin: 40px auto; background: #fff; border-radius: 12px; box-shadow: 0 4px 10px rgba(0,0,0,0.1); padding: 20px; }
    .bot, .user { margin: 10px 0; }
    .bot { color: #333; }
    .user { text-align: right; color: #005bbb; }
    .button-group { display: flex; flex-wrap: wrap; gap: 8px; margin-top: 10px; }
    button { background: #005bbb; color: white; border: none; border-radius: 8px; padding: 8px 12px; cursor: pointer; transition: background 0.2s; }
    button:hover { background: #003f80; }
  </style>
</head>
<body>
  <div id="chat">
    <div id="messages"></div>
  </div>

  <script>
    // ðŸ§© WPB Jeugd beslisboom als JSON (verkort voor demo)
    const wpbFlow = {
      vraag: "Gaat het om een nieuwe aanvraag voor jeugdzorg?",
      opties: [
        {
          antwoord: "Ja",
          volgende: {
            vraag: "Ontvangt de jeugdige nu al jeugdzorg?",
            opties: [
              {
                antwoord: "Ja",
                volgende: {
                  vraag: "Ontvangt de jeugdige uitsluitend ambulante jeugdzorg?",
                  opties: [
                    { antwoord: "Ja", actie: "Verantwoordelijke gemeente = gemeente waar de jeugdige nu staat ingeschreven." },
                    {
                      antwoord: "Nee",
                      volgende: {
                        vraag: "Verhuist de jeugdige naar een andere gemeente?",
                        opties: [
                          { antwoord: "Ja", actie: "Verantwoordelijke gemeente = gemeente waar de jeugdige staat ingeschreven na verhuizing." },
                          { antwoord: "Nee", actie: "Verantwoordelijke gemeente = gemeente die de huidige jeugdzorg bekostigt." }
                        ]
                      }
                    }
                  ]
                }
              },
              { antwoord: "Nee", actie: "Ga naar schema B." }
            ]
          }
        },
        { antwoord: "Nee", actie: "Ga naar schema B." }
      ]
    };

    // ðŸ”§ UI functionaliteit
    const chat = document.getElementById('messages');

    function addMessage(text, sender = 'bot') {
      const msg = document.createElement('div');
      msg.className = sender;
      msg.innerText = text;
      chat.appendChild(msg);
      chat.scrollTop = chat.scrollHeight;
    }

    function showOptions(options, currentNode) {
      const container = document.createElement('div');
      container.className = 'button-group';

      options.forEach(opt => {
        const btn = document.createElement('button');
        btn.innerText = opt.antwoord;
        btn.onclick = () => {
          addMessage(opt.antwoord, 'user');
          container.remove();
          if (opt.actie) {
            addMessage(opt.actie, 'bot');
          } else if (opt.volgende) {
            setTimeout(() => showNode(opt.volgende), 500);
          }
        };
        container.appendChild(btn);
      });

      chat.appendChild(container);
      chat.scrollTop = chat.scrollHeight;
    }

    function showNode(node) {
      addMessage(node.vraag, 'bot');
      showOptions(node.opties, node);
    }

    // ðŸš€ Start de chatbot
    showNode(wpbFlow);
  </script>
</body>
</html>
